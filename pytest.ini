[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*

# Test execution options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=.
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=90
    --durations=10
    --json-report
    --json-report-file=test_results.json

# Timeout settings
timeout = 300
timeout_method = thread

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    performance: Performance and load tests
    security: Security vulnerability tests
    error_handling: Error handling and resilience tests
    slow: Slow-running tests (use -m "not slow" to skip)
    fast: Fast-running tests
    critical: Critical functionality tests
    regression: Regression tests for bug fixes
    smoke: Smoke tests for basic functionality
    
    # Component-specific markers
    meta_orchestrator: Enhanced Meta-Orchestrator tests
    task_allocator: Task Allocation System tests
    financial_workflow: Financial Workflow tests
    adaptive_learner: Adaptive Learning System tests
    resilience: Resilience Framework tests
    collaboration: Collaboration Protocol tests
    performance_tuner: Performance Tuner tests
    
    # Environment markers
    requires_database: Tests requiring database connection
    requires_redis: Tests requiring Redis connection
    requires_external_api: Tests requiring external API access
    windows_only: Tests that only run on Windows
    unix_only: Tests that only run on Unix/Linux
    
    # CI/CD markers
    ci_only: Tests that only run in CI environment
    local_only: Tests that only run locally
    nightly: Tests for nightly builds

# Minimum Python version
minversion = 3.9

# Test collection settings
collect_ignore = setup.py conftest.py .venv venv env .env .git __pycache__ .pytest_cache htmlcov node_modules

# Asyncio settings
asyncio_mode = auto

# Warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning
    ignore:.*loop is being closed.*:ResourceWarning

# Log settings
log_auto_indent = true
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S
